<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ShopApp</title>
    <!-- Extract to respective bundles -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/mustache.js/3.0.3/mustache.min.js"></script>
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    @Styles.Render("~/Content/style.css")
    @Styles.Render("~/bundles/jquery-ui")
</head>
<body>
    <main>
        <section class="banner">
            <section>
                <div class="banner-icon">
                    <i class="fab fa-stripe-s fa-3x"></i>
                </div>
                <div class="banner-search-box">
                    <input id="search-box" type="text" class="text-center" placeholder="Search for a product..." />
                    <button class="shop-btn" type="button"><i class="fas fa-search fa-lg"></i></button>
                </div>
                <div class="banner-order-information">
                    <a href="javascript:void(0)">
                        <i class="fas fa-shopping-cart fa-2x"></i>
                    </a>
                </div>
            </section>
        </section>

        <nav class="shop-nav">
            <ul>
                <li>@Html.ActionLink("Index", "Index", "Home")</li>
                <li><a href="/Product/All?category=Womens">Browse</a></li>
                <li>@Html.ActionLink("About", "About", "Home")</li>
                <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                <li class="dropdown">
                    <a href="#" class="dropbtn">My Account</a>
                    <div class="dropdown-content">
                        @if (this.User.Identity.IsAuthenticated)
                        {
                            if (this.User.IsInRole(RolesConstants.Administrator))
                            {
                                @Html.ActionLink("Orders", "All", "Order")
                            }
                            @Html.ActionLink("Profile", "MyProfile", "Account")
                            @Html.ActionLink("Logout", "Logout", "Account", null, new { shop_action = "logout" })
                        }
                        else
                        {
                            @Html.ActionLink("Login", "Login", "Account", null, new { shop_action = "logout" })
                            @Html.ActionLink("Register", "Register", "Account")
                        }
                    </div>
                </li>
            </ul>
        </nav>

        @this.RenderBody()

        @if (this.User.Identity.IsAuthenticated)
        {
            <div id="checkout-dialog" title="Checkout"></div>
        }

    </main>

    <footer class="shop-footer">
        <section class="footer-information">
            <section>
                <h4 class="text-center">Contact Info</h4>
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore.</p>
            </section>
            <section>
                <h4 class="text-center">Contact Info</h4>
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore.</p>
            </section>
            <section>
                <h4 class="text-center">Contact Info</h4>
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore.</p>
            </section>
        </section>
        <section class="footer-copyright-info text-center">
            <p>All Rights Reserved &copy; 2019</p>
        </section>
    </footer>

    @RenderSection("scripts", required: false)
    @RenderSection("templates", required: false)

    <script id="checkout-partial-template" type="text/html">
        @Html.Partial("_CheckoutPartialTemplate")
    </script>

    <script type="text/javascript">
        $(function () {
            // fetching the products names
            @*$.ajax({
                url: "@this.Url.Action("Names", "Product")",
                headers: {
                    "Content-Type": "application/json"
                },
                method: "GET"
            }).then(function (productsNames) {
                $(".banner").find("#search-box").autocomplete({
                    source: productsNames,
                    show: { effect: "blind", duration: 500 }
                });
            });*@


            @* Deleting the order's session storage after logout *@
            var logoutButton = $(".shop-nav").find("[shop-action='logout']");
            logoutButton.on("click", function () {
                window.sessionStorage.clear();
            });

            // Visualising the ordered elements count
            @if (this.User.Identity.IsAuthenticated)
            {
                 @: var cartElement = $(".banner .banner-order-information i");
                 @: cartElement.text(window.sessionStorage.length);
            }

            // checkout dialog dialog
            var checkoutDialog = $("#checkout-dialog");
            checkoutDialog.dialog({
                autoOpen: false,
                height: 550,
                width: 400,
                modal: true,
                show: {
                    effect: "blind",
                    duration: 500
                },
                hide: {
                    effect: "explode",
                    duration: 500
                },
                buttons: {
                    Confirm: function () {
                        var _this = this;
                        var addressValidationField = $("#address-validation-field");
                        if ($("#address").val().length == 0) {
                            addressValidationField.text("Invalid address.");
                            return;
                        }

                        addressValidationField.parent().hide();
                        
                        @*// clearing the session storage *@
                        window.sessionStorage.clear();

                        $("#checkout-table > tbody > tr").each(function (i, tr) {
                            var $tr = $(tr);

                            var productId = $tr.attr("shop-product-id");
                            var productName = $tr.children().first().text();
                            var productQuantity = $tr.children("td").eq(1).children("input[type='number']").val();

                            window.sessionStorage.setItem(productName, JSON.stringify({
                                productId: productId,
                                quantity: productQuantity
                            }));

                        });

                        $.ajax({
                             method: "POST",
                             url: "@Url.Action("Checkout", "Order")",
                             data: {
                                 products: JSON.stringify(Object.keys(window.sessionStorage)
                                     .map(function (productKey) {
                                         var product = JSON.parse(window.sessionStorage[productKey]);

                                         if (productKey !== "length")
                                         {
                                             return {
                                                 ProductId: product.productId,
                                                 Quantity: product.quantity,
                                                 Address: $("#checkout-dialog [shop-role='order-address']").val(),
                                                 Description: $("#checkout-dialog [shop-role='order-description']").val()
                                             };
                                         }
                                     })),
                               }
                        })
                        .then(function(data) {
                            @* clearing the session storage*@
                            window.sessionStorage.clear();

                            var cartElement = $(".banner .banner-order-information i");
                            cartElement.text(window.sessionStorage.length);
                        });

                        checkoutDialog.dialog("close");
                    },
                    Cancel: function () {
                        checkoutDialog.dialog("close");
                    }
                }
            });

            var checkoutButton = $(".banner .banner-order-information > a");
            checkoutButton.on("click", function (e) {
                e.preventDefault();

                var orders = Object.keys(window.sessionStorage)
                    .map(function (key) {
                        return {
                            name: key,
                            productId: JSON.parse(window.sessionStorage[key]).productId,
                            quantity: JSON.parse(window.sessionStorage[key]).quantity,
                            price: JSON.parse(window.sessionStorage[key]).price
                        };
                    });

                var totalPrice = 0;

                Array.from(orders).forEach(function (o) {
                    totalPrice += (parseFloat(o.quantity) * parseFloat(o.price));
                });

                @if (this.User.Identity.IsAuthenticated)
                {
                    @: var template = $("#checkout-partial-template").html();
                    @: var rendered = Mustache.render(template, { orders: orders, totalPrice: totalPrice.toFixed(2).toString() });

                    @: $("#checkout-dialog").html(rendered);

                    @:$("#checkout-dialog").find("button[shop-action='remove-product']").on("click", function (e) {
                        // removing the session storage product items
                        @: var currentRow = $(this).closest("[shop-product-id]");
                        @: var productName = currentRow.children().first().text();
                        @: window.sessionStorage.removeItem(productName);
                        @: currentRow.remove();
                        @: checkoutDialog.dialog("close");
                        @: checkoutButton.click();

                        @: var cartElement = $(".banner .banner-order-information i");
                        @: cartElement.text(window.sessionStorage.length);
                    @:});

                    @: checkoutDialog.dialog("open");
                }
                else
                {
                    @: window.location.href = "@Url.Action("Login", "Account")";
                }

            });
        });
    </script>
</body>
</html>