<div class="w-60r mx-auto p-1">
    <h1 class="text-center w-100 p-1">Orders</h1>

    <div id="orders-table-toolbar" class="w-100 table-toolbar">
        <button id="collapse-groups-btn" class="shop-btn shop-btn-green">Collapse all</button>
        <button id="send-order-btn" style="display: none;" class="shop-btn shop-btn-green">Send</button>
        <button id="complete-order-btn" style="display: none;" class="shop-btn shop-btn-green">Complete</button>
    </div>
    <div id="orders-wrapper" class="w-100">
        <table class="w-100 mx-auto"></table>
    </div>
</div>

@section Scripts {

    <script type="text/javascript">
        $(function () {
            // TODO [GM]: Extract model to CategoryApi?

            $.ajax({
                type: "GET",
                url: "/api/OrderApi/GetOrders",
                contentType: "application/json",
                success: function (orders) {

                    var statusTypesObj = orders.reduce(function (acm, or) {
                        acm[or.Status.toLowerCase()] = or.Status;

                        return acm;
                    }, {});

                    // collapse all groups functionality
                    $("#collapse-groups-btn").on("click", function () {
                        // TODO [GM]: A better way?
                        $(".tabulator-row.tabulator-group.tabulator-group-level-0.tabulator-group-visible.tabulator-row-odd .tabulator-arrow, .tabulator-row.tabulator-group.tabulator-group-level-0.tabulator-group-visible.tabulator-row-even .tabulator-arrow").click();
                    });

                    // send order
                    $("#send-order-btn").on("click", function () {
                        var sendOrderCallback = function sendOrderCallback() {
                            var orderId = table.getSelectedRows()[0].getData().Id;

                            $.ajax({
                                url: "/Admin/Administration/Send/" + orderId,
                                method: "GET",
                                success: function () {
                                    window.location.reload();
                                }
                            });

                            $(".custom-modal").find(".close-modal-btn").click();
                        };

                        modalFunctions.openConfirmationModal(sendOrderCallback.bind(this));
                    });

                    // complete order
                    $("#complete-order-btn").on("click", function () {
                        var completeOrderCallback = function completeOrderCallback() {
                            var orderId = table.getSelectedRows()[0].getData().Id;

                            $.ajax({
                                url: "/Admin/Administration/Complete/" + orderId,
                                method: "GET",
                                success: function () {
                                    window.location.reload();
                                }
                            });

                            $(".custom-modal").find(".close-modal-btn").click();
                        };

                        modalFunctions.openConfirmationModal(completeOrderCallback.bind(this));
                    });

                    var table = new Tabulator("#orders-wrapper table", {
                        layout: "fitData",
                        selectable: 1,
                        resizableRows: false,
                        resizableColumns: false,
                        pagination: "local",
                        paginationSize: 10,
                        groupBy: "Status",
                        cellClick: function (e, cell) {
                            // show product details modal functionality
                            var productId = cell.getData().Product.Id;

                            var columnType = cell._cell.column.contentElement.innerText;
                            if (columnType.toLowerCase() === "product") {
                                modalFunctions.openProductDetailsDialog(productId)
                            }
                        },
                        rowSelected: function (row) {
                            var sendBtn = $("#orders-table-toolbar").find("#send-order-btn");
                            var completeBtn = $("#orders-table-toolbar").find("#complete-order-btn");

                            var currentStatus = row.getData().Status;
                            if (currentStatus === "@ShopApp.Models.OrderStatus.New.ToString()") {
                                sendBtn.fadeIn(200);
                                completeBtn.hide();
                            } else if (currentStatus === "@ShopApp.Models.OrderStatus.Sent.ToString()") {
                                sendBtn.hide();
                                completeBtn.fadeIn(200);
                            } else {
                                sendBtn.fadeOut(100);
                                completeBtn.fadeOut(100);
                            }
                        },
                        rowDeselected: function () {
                            $("#orders-table-toolbar").find("#send-order-btn").fadeOut(100);
                            $("#orders-table-toolbar").find("#complete-order-btn").fadeOut(100);
                        },
                        columns: [
                            { title: "Id", field: "OrderId", sorter: "string", visible: false },
                            { title: "ProductId", field: "Product.Id", sorter: "string", visible: false },
                            { title: "Product", field: "Product.Name", sorter: "string", width: 200 },
                            { title: "User", field: "User", sorter: "string", width: 200 },
                            { title: "Quantity", field: "Quantity", sorter: "number", width: 150 },
                            { title: "Total Price", field: "TotalPrice", sorter: "number", width: 150 },
                            // filtering by status
                            { title: "Status", field: "Status", sorter: "string", width: 180, editor: "select", editorParams: { values: statusTypesObj }, headerFilter: true, headerFilterParams: statusTypesObj },
                            {
                                formatter: "buttonCross",
                                width: 30,
                                cellClick: function (e, cell) {
                                    var orderId = cell.getRow().getData().Id;

                                    var cancelOrderCallback = function cancelOrderCallback(orderId) {
                                        $.ajax({
                                            url: "/Order/Cancel/" + orderId,
                                            method: "GET",
                                            sucess: function () {
                                                window.location.reload();
                                            }
                                        });

                                        $(".custom-modal").find(".close-modal-btn").click();
                                    };

                                    modalFunctions.openConfirmationModal(cancelOrderCallback.bind(this, orderId));
                                }
                            }
                        ]
                    });

                    table.setData(orders);
                }
            });
        });
    </script>

}