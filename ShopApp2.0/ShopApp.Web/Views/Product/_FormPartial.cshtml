@model ProductBaseInputModel
@{
    var isEdit = Model is ProductEditInputModel;
}

<div class="form-wrapper">
    <h2 class="w-50 mx-auto text-center">Create a Product</h2>
    <form class="custom-form" asp-controller="Product" asp-action="@(isEdit ? "Edit" : "Create")" method="@FormMethod.Post.ToString()">
        @if (isEdit)
        {
            // TODO [GM]: Research a better way?
            @Html.HiddenFor(model => ((ProductEditInputModel) model).Id)
        }
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="custom-input-wrapper">
            <input asp-for="Name" placeholder="Enter Product Name..."/>
            <span class="d-block text-danger" asp-validation-for="Name"></span>
        </div>
        <div class="custom-input-wrapper">
            <input asp-for="Description" placeholder="Enter Description..."/>
            <span class="d-block text-danger" asp-validation-for="Description"></span>
        </div>
        <div class="custom-input-wrapper">
            <input asp-for="CoverUrl" placeholder="Enter Cover URL..."/>
            <span class="d-block text-danger" asp-validation-for="CoverUrl"></span>
        </div>
        <div class="custom-input-wrapper">
            <input asp-for="Price" placeholder="Enter Price..."/>
            <span class="d-block text-danger" asp-validation-for="Price"></span>
        </div>
        <div class="custom-input-wrapper">
            <select asp-for="CategoryId" asp-items="Model.Categories"></select> 
            <span class="d-block text-danger" asp-validation-for="CategoryId"></span> 
        </div>
        <div class="custom-input-wrapper">
            <input type="submit" value="@(isEdit ? "Edit" : "Create")"/>
        </div>
    </form>
</div>