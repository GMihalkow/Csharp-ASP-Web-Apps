@model IEnumerable<ProductTableViewModel>
@using ShopApp.Web.Extensions
@{
    ViewBag.RegisterMomentJs = true;
    ViewBag.RegisterModal = true;
}

<div class="content-wrapper">
    <h2 class="w-50 mx-auto text-center">Products</h2>
    <div class="table-tools">
        <a asp-action="Create" asp-controller="Product" class="tabulator-custom-btn">Create</a>
        <a id="edit-product-btn" href="javascript:void(0)" class="tabulator-custom-btn d-none">Edit</a>
        <a id="delete-product-btn" href="javascript:void(0)" class="tabulator-custom-btn d-none"><i class="fas fa-trash-alt"></i></a>
    </div>
    <partial name="_AlertPartial" model="@(TempData.GetValues<Alert>("Alerts"))" />
    <div id="products-table"></div>
</div>

@section scripts
{
    
    <script type="text/javascript">
        $(function() {
            // TODO [GM]: Finish implementing the old StockCount functionality.
            
            var deleteProductBtn = $('#delete-product-btn');
            console.log(deleteProductBtn);
            deleteProductBtn.on('click', function(e) {
                e.preventDefault();
                
                var href = $(e.currentTarget).attr('href');
                
                modalFunctions.openConfirmationModal(function() {
                    window.location.href = href;
                });
            });
            
            var productsAsJson = @Json.Serialize(Model);
            
            var categories = productsAsJson.map(function(pr) { return pr.categoryName; });
            
            var categoriesObj = categories.filter(function(category, index) { return categories.indexOf(category) === index; });
            
            var table = new Tabulator("#products-table", {
                data: productsAsJson,
                layout:"fitColumns",
                selectable: 1,
                rowSelected: function(row) {                    
                    var editProductBtn = $("#edit-product-btn");
                    var deleteProductBtn = $("#delete-product-btn");
                    
                    editProductBtn.attr("href", "@Url.Action("Edit", "Product")/" + row.getData().id);
                    deleteProductBtn.attr("href", "@Url.Action("Delete", "Product")/" + row.getData().id);

                    editProductBtn.fadeIn(300);
                    deleteProductBtn.fadeIn(300);
                },
                rowDeselected: function(rwo){
                    var editProductBtn = $("#edit-product-btn");
                    var deleteProductBtn = $("#delete-product-btn");
                    
                    editProductBtn.fadeOut(200);
                    deleteProductBtn.fadeOut(200);
                },
                columns: [
                    { title: "Id", field: "id", sorter: "string", visible: false },
                    { title: "Name", field: "name", sorter: "string" },
                    {
                        title: "Added On",
                        field: "addedOn",
                        sorter: "datetime",
                        sorterParams: { format: "YYYY-MM-DDTHH:mm:ss.sssZ" },
                        formatter: "datetime",
                        formatterParams: {
                            inputFormat: "YYYY-MM-DD hh:mm:ss",
                            outputFormat: "DD/MM/YY hh:mm:ss",
                            invalidPlaceholder: "(invalid date)",
                        }
                    },
                    {
                        title: "Category",
                        field: "categoryName",
                        sorter: "string",
                        editable: false,
                        editor: "select",
                        editorParams: { values: categoriesObj },
                        headerFilter: true,
                        headerFilterParams: categoriesObj,
                        headerFilterFunc: "="
                    },
                    { title: "Stock Count", field: "stockCount", sorter: "number", editor: true },
                ],
                groupBy: "categoryName",
                groupToggleElement:"header",
                pagination: "local",
                paginationSize: 10
            });
        });
    </script>

}